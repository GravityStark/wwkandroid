// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMessage.proto

package message.core;

public final class PBMessageProto {
  private PBMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PBMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:message.core.PBMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    java.lang.String getPlayerId();
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    boolean hasCode();
    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    int getCode();

    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    boolean hasPushType();
    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    message.core.PushMsgProto.PushType getPushType();

    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    boolean hasData();
    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   **
   * 主协议栈
   * </pre>
   *
   * Protobuf type {@code message.core.PBMessage}
   */
  public  static final class PBMessage extends
      com.google.protobuf.GeneratedMessageLite<
          PBMessage, PBMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:message.core.PBMessage)
      PBMessageOrBuilder {
    private PBMessage() {
      playerId_ = "";
      pushType_ = 1;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private java.lang.String playerId_;
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    public java.lang.String getPlayerId() {
      return playerId_;
    }
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(playerId_);
    }
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    private void setPlayerId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      playerId_ = value;
    }
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    private void clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      playerId_ = getDefaultInstance().getPlayerId();
    }
    /**
     * <pre>
     *玩家id
     * </pre>
     *
     * <code>optional string playerId = 1;</code>
     */
    private void setPlayerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      playerId_ = value.toStringUtf8();
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    public int getCode() {
      return code_;
    }
    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    private void setCode(int value) {
      bitField0_ |= 0x00000002;
      code_ = value;
    }
    /**
     * <pre>
     *操作码id
     * </pre>
     *
     * <code>optional int32 code = 2;</code>
     */
    private void clearCode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      code_ = 0;
    }

    public static final int PUSHTYPE_FIELD_NUMBER = 3;
    private int pushType_;
    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    public boolean hasPushType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    public message.core.PushMsgProto.PushType getPushType() {
      message.core.PushMsgProto.PushType result = message.core.PushMsgProto.PushType.forNumber(pushType_);
      return result == null ? message.core.PushMsgProto.PushType.PUSH_PLAYER : result;
    }
    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    private void setPushType(message.core.PushMsgProto.PushType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      pushType_ = value.getNumber();
    }
    /**
     * <pre>
     *推送的类型
     * </pre>
     *
     * <code>optional .message.core.PushType pushType = 3;</code>
     */
    private void clearPushType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      pushType_ = 1;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      data_ = value;
    }
    /**
     * <pre>
     *请求or响应数据
     * </pre>
     *
     * <code>optional bytes data = 4;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000008);
      data_ = getDefaultInstance().getData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPlayerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, pushType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPlayerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, pushType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static message.core.PBMessageProto.PBMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static message.core.PBMessageProto.PBMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static message.core.PBMessageProto.PBMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static message.core.PBMessageProto.PBMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(message.core.PBMessageProto.PBMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     * 主协议栈
     * </pre>
     *
     * Protobuf type {@code message.core.PBMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          message.core.PBMessageProto.PBMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:message.core.PBMessage)
        message.core.PBMessageProto.PBMessageOrBuilder {
      // Construct using message.core.PBMessageProto.PBMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return instance.hasPlayerId();
      }
      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public java.lang.String getPlayerId() {
        return instance.getPlayerId();
      }
      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        return instance.getPlayerIdBytes();
      }
      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        copyOnWrite();
        instance.setPlayerId(value);
        return this;
      }
      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        copyOnWrite();
        instance.clearPlayerId();
        return this;
      }
      /**
       * <pre>
       *玩家id
       * </pre>
       *
       * <code>optional string playerId = 1;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPlayerIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *操作码id
       * </pre>
       *
       * <code>optional int32 code = 2;</code>
       */
      public boolean hasCode() {
        return instance.hasCode();
      }
      /**
       * <pre>
       *操作码id
       * </pre>
       *
       * <code>optional int32 code = 2;</code>
       */
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <pre>
       *操作码id
       * </pre>
       *
       * <code>optional int32 code = 2;</code>
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <pre>
       *操作码id
       * </pre>
       *
       * <code>optional int32 code = 2;</code>
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <pre>
       *推送的类型
       * </pre>
       *
       * <code>optional .message.core.PushType pushType = 3;</code>
       */
      public boolean hasPushType() {
        return instance.hasPushType();
      }
      /**
       * <pre>
       *推送的类型
       * </pre>
       *
       * <code>optional .message.core.PushType pushType = 3;</code>
       */
      public message.core.PushMsgProto.PushType getPushType() {
        return instance.getPushType();
      }
      /**
       * <pre>
       *推送的类型
       * </pre>
       *
       * <code>optional .message.core.PushType pushType = 3;</code>
       */
      public Builder setPushType(message.core.PushMsgProto.PushType value) {
        copyOnWrite();
        instance.setPushType(value);
        return this;
      }
      /**
       * <pre>
       *推送的类型
       * </pre>
       *
       * <code>optional .message.core.PushType pushType = 3;</code>
       */
      public Builder clearPushType() {
        copyOnWrite();
        instance.clearPushType();
        return this;
      }

      /**
       * <pre>
       *请求or响应数据
       * </pre>
       *
       * <code>optional bytes data = 4;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <pre>
       *请求or响应数据
       * </pre>
       *
       * <code>optional bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       *请求or响应数据
       * </pre>
       *
       * <code>optional bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       *请求or响应数据
       * </pre>
       *
       * <code>optional bytes data = 4;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:message.core.PBMessage)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new message.core.PBMessageProto.PBMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          message.core.PBMessageProto.PBMessage other = (message.core.PBMessageProto.PBMessage) arg1;
          playerId_ = visitor.visitString(
              hasPlayerId(), playerId_,
              other.hasPlayerId(), other.playerId_);
          code_ = visitor.visitInt(
              hasCode(), code_,
              other.hasCode(), other.code_);
          pushType_ = visitor.visitInt(hasPushType(), pushType_,
              other.hasPushType(), other.pushType_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  playerId_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  code_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  message.core.PushMsgProto.PushType value = message.core.PushMsgProto.PushType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    pushType_ = rawValue;
                  }
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000008;
                  data_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (message.core.PBMessageProto.PBMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:message.core.PBMessage)
    private static final message.core.PBMessageProto.PBMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PBMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static message.core.PBMessageProto.PBMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PBMessage> PARSER;

    public static com.google.protobuf.Parser<PBMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
